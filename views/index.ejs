<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>💀 TumnataMreja - Underground Market</title>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>💀</text></svg>">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;600;700&display=swap');
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Source Code Pro', 'Courier New', monospace;
            background: #000000;
            color: #00ff00;
            min-height: 100vh;
            line-height: 1.4;
            overflow-x: hidden;
            position: relative;
        }

        /* Matrix rain effect */
        .matrix-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            opacity: 0.1;
        }

        /* Glitch effect */
        .glitch {
            position: relative;
            animation: glitch 2s linear infinite;
        }

        @keyframes glitch {
            2%, 64% { transform: translate(2px, 0) skew(0deg); }
            4%, 60% { transform: translate(-2px, 0) skew(0deg); }
            62% { transform: translate(0, 0) skew(5deg); }
        }

        .glitch:before,
        .glitch:after {
            content: attr(data-text);
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        .glitch:before {
            animation: glitch-anim-1 0.5s infinite linear alternate-reverse;
        }

        .glitch:after {
            animation: glitch-anim-2 0.5s infinite linear alternate-reverse;
        }

        @keyframes glitch-anim-1 {
            0% { clip: rect(42px, 9999px, 44px, 0); }
            5% { clip: rect(12px, 9999px, 59px, 0); }
            10% { clip: rect(48px, 9999px, 29px, 0); }
            15% { clip: rect(42px, 9999px, 73px, 0); }
            20% { clip: rect(63px, 9999px, 27px, 0); }
            25% { clip: rect(34px, 9999px, 55px, 0); }
            30% { clip: rect(86px, 9999px, 73px, 0); }
            35% { clip: rect(20px, 9999px, 20px, 0); }
            40% { clip: rect(26px, 9999px, 60px, 0); }
            45% { clip: rect(25px, 9999px, 85px, 0); }
            50% { clip: rect(57px, 9999px, 94px, 0); }
            55% { clip: rect(38px, 9999px, 54px, 0); }
            60% { clip: rect(83px, 9999px, 39px, 0); }
            65% { clip: rect(37px, 9999px, 34px, 0); }
            70% { clip: rect(67px, 9999px, 78px, 0); }
            75% { clip: rect(71px, 9999px, 75px, 0); }
            80% { clip: rect(2px, 9999px, 82px, 0); }
            85% { clip: rect(46px, 9999px, 59px, 0); }
            90% { clip: rect(38px, 9999px, 80px, 0); }
            95% { clip: rect(69px, 9999px, 73px, 0); }
            100% { clip: rect(18px, 9999px, 20px, 0); }
        }

        @keyframes glitch-anim-2 {
            6% { clip: rect(30px, 9999px, 36px, 0); }
            10% { clip: rect(59px, 9999px, 71px, 0); }
            13% { clip: rect(45px, 9999px, 32px, 0); }
            16% { clip: rect(28px, 9999px, 92px, 0); }
            19% { clip: rect(89px, 9999px, 98px, 0); }
            22% { clip: rect(5px, 9999px, 46px, 0); }
            25% { clip: rect(94px, 9999px, 28px, 0); }
            30% { clip: rect(11px, 9999px, 18px, 0); }
            35% { clip: rect(62px, 9999px, 64px, 0); }
            40% { clip: rect(9px, 9999px, 93px, 0); }
            45% { clip: rect(69px, 9999px, 17px, 0); }
            50% { clip: rect(79px, 9999px, 75px, 0); }
            55% { clip: rect(30px, 9999px, 81px, 0); }
            60% { clip: rect(23px, 9999px, 30px, 0); }
            65% { clip: rect(94px, 9999px, 39px, 0); }
            70% { clip: rect(85px, 9999px, 27px, 0); }
            75% { clip: rect(71px, 9999px, 47px, 0); }
            80% { clip: rect(2px, 9999px, 12px, 0); }
            85% { clip: rect(27px, 9999px, 50px, 0); }
            90% { clip: rect(84px, 9999px, 82px, 0); }
            95% { clip: rect(34px, 9999px, 42px, 0); }
            100% { clip: rect(58px, 9999px, 78px, 0); }
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
            position: relative;
            z-index: 1;
        }

        /* Header */
        header {
            background: rgba(0, 0, 0, 0.9);
            border: 1px solid #00ff00;
            border-radius: 0;
            margin: 20px 0;
            box-shadow: 0 0 20px rgba(0, 255, 0, 0.3);
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
        }

        .logo {
            font-size: 2rem;
            font-weight: 700;
            color: #00ff00;
            text-shadow: 0 0 10px #00ff00;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }

        .nav-links {
            display: flex;
            gap: 2rem;
            align-items: center;
        }

        .nav-links a {
            color: #00ff00;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            padding: 0.5rem 1rem;
            border: 1px solid transparent;
            position: relative;
        }

        .nav-links a:hover {
            color: #000;
            background: #00ff00;
            box-shadow: 0 0 15px rgba(0, 255, 0, 0.8);
        }

        .btn {
            background: #000;
            color: #00ff00;
            padding: 0.7rem 1.5rem;
            border: 2px solid #00ff00;
            font-family: inherit;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-transform: uppercase;
        }

        .btn:hover {
            background: #00ff00;
            color: #000;
            box-shadow: 0 0 20px rgba(0, 255, 0, 0.8);
            transform: translateY(-2px);
        }

        /* Hero Section */
        .hero {
            text-align: center;
            padding: 4rem 0;
            border: 1px solid #333;
            margin: 2rem 0;
            background: linear-gradient(45deg, #000000, #001100, #000000);
            position: relative;
        }

        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: repeating-linear-gradient(
                90deg,
                transparent,
                transparent 2px,
                rgba(0, 255, 0, 0.03) 2px,
                rgba(0, 255, 0, 0.03) 4px
            );
        }

        .hero h1 {
            font-size: 4rem;
            font-weight: 700;
            margin-bottom: 1rem;
            color: #00ff00;
            text-shadow: 0 0 20px #00ff00;
            position: relative;
            z-index: 1;
        }

        .hero p {
            font-size: 1.5rem;
            color: #00cc00;
            margin-bottom: 2rem;
            max-width: 800px;
            margin-left: auto;
            margin-right: auto;
            position: relative;
            z-index: 1;
        }

        .hero-features {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin-top: 2rem;
            flex-wrap: wrap;
            position: relative;
            z-index: 1;
        }

        .feature-badge {
            background: #000;
            color: #00ff00;
            padding: 1rem 2rem;
            border: 1px solid #00ff00;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        /* Products Section */
        .products-section {
            padding: 4rem 0;
        }

        .section-title {
            text-align: center;
            font-size: 3rem;
            font-weight: 800;
            margin-bottom: 3rem;
            color: #00ff00;
            text-shadow: 0 0 20px #00ff00;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 3rem;
            margin-top: 3rem;
        }

        .product-card {
            background: #000;
            border: 2px solid #00ff00;
            padding: 2rem;
            transition: all 0.4s ease;
            position: relative;
            overflow: hidden;
        }

        .product-card::before {
            content: '';
            position: absolute;
            top: -2px;
            left: -2px;
            right: -2px;
            bottom: -2px;
            background: linear-gradient(45deg, #00ff00, #000, #00ff00, #000);
            z-index: -1;
            animation: border-spin 3s linear infinite;
        }

        @keyframes border-spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .product-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 20px 40px rgba(0, 255, 0, 0.3);
        }

        .product-image {
            width: 100%;
            height: 200px;
            background: linear-gradient(135deg, #001100, #003300);
            border: 1px solid #00ff00;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 4rem;
            margin-bottom: 2rem;
            position: relative;
        }

        .product-name {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
            color: #00ff00;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .product-description {
            color: #00cc00;
            margin-bottom: 2rem;
            line-height: 1.6;
        }

        .product-price {
            font-size: 2.5rem;
            font-weight: 800;
            color: #00ff00;
            margin-bottom: 2rem;
            text-shadow: 0 0 10px #00ff00;
        }

        .product-actions {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .btn-buy {
            flex: 1;
            background: #000;
            color: #00ff00;
            padding: 1.2rem;
            border: 2px solid #00ff00;
            font-family: inherit;
            font-weight: 700;
            font-size: 1.2rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .btn-buy:hover {
            background: #00ff00;
            color: #000;
            box-shadow: 0 0 30px rgba(0, 255, 0, 0.8);
        }

        /* Auth Prompt */
        .auth-prompt {
            background: #000;
            border: 2px solid #ff0000;
            padding: 3rem;
            text-align: center;
            margin: 3rem 0;
            box-shadow: 0 0 30px rgba(255, 0, 0, 0.3);
        }

        .auth-prompt h3 {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: #ff0000;
            text-transform: uppercase;
        }

        .auth-prompt p {
            color: #ff6666;
            margin-bottom: 2rem;
            font-size: 1.2rem;
        }

        .auth-buttons {
            display: flex;
            gap: 2rem;
            justify-content: center;
            flex-wrap: wrap;
        }

        .btn-auth {
            background: #000;
            color: #ff0000;
            padding: 1rem 2rem;
            border: 2px solid #ff0000;
            font-family: inherit;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            text-transform: uppercase;
        }

        .btn-auth:hover {
            background: #ff0000;
            color: #000;
            box-shadow: 0 0 30px rgba(255, 0, 0, 0.8);
        }

        /* Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.95);
            z-index: 2000;
            animation: fadeIn 0.3s ease;
        }

        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: #000;
            border: 2px solid #00ff00;
            padding: 3rem;
            max-width: 600px;
            width: 90%;
            box-shadow: 0 0 50px rgba(0, 255, 0, 0.5);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            border-bottom: 1px solid #00ff00;
            padding-bottom: 1rem;
        }

        .modal-title {
            font-size: 2rem;
            font-weight: 700;
            color: #00ff00;
            text-transform: uppercase;
        }

        .close-modal {
            background: none;
            border: none;
            font-size: 2rem;
            color: #00ff00;
            cursor: pointer;
            padding: 0.5rem;
            transition: all 0.3s ease;
        }

        .close-modal:hover {
            color: #ff0000;
            text-shadow: 0 0 10px #ff0000;
        }

        .payment-form {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .form-group label {
            font-weight: 700;
            color: #00ff00;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .form-group input,
        .form-group select {
            padding: 1rem;
            border: 2px solid #00ff00;
            background: #000;
            color: #00ff00;
            font-family: inherit;
            font-size: 1rem;
            font-weight: 600;
        }

        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            box-shadow: 0 0 20px rgba(0, 255, 0, 0.5);
        }

        .provider-selection {
            display: flex;
            gap: 1rem;
            margin: 1rem 0;
        }

        .provider-btn {
            flex: 1;
            padding: 1.5rem;
            border: 2px solid #666;
            background: #000;
            color: #666;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            font-weight: 700;
            text-transform: uppercase;
            font-family: inherit;
        }

        .provider-btn.selected,
        .provider-btn:hover {
            border-color: #00ff00;
            color: #00ff00;
            box-shadow: 0 0 20px rgba(0, 255, 0, 0.3);
        }

        .payment-result {
            margin-top: 2rem;
            padding: 2rem;
            border: 2px solid #00ff00;
            text-align: center;
        }

        .payment-success {
            border-color: #00ff00;
            background: rgba(0, 255, 0, 0.1);
            color: #00ff00;
        }

        .payment-error {
            border-color: #ff0000;
            background: rgba(255, 0, 0, 0.1);
            color: #ff0000;
        }

        /* Footer */
        footer {
            background: #000;
            border-top: 2px solid #00ff00;
            text-align: center;
            padding: 2rem;
            margin-top: 4rem;
        }

        footer p {
            color: #00cc00;
            font-size: 1.1rem;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .hero h1 {
                font-size: 2.5rem;
            }
            
            .products-grid {
                grid-template-columns: 1fr;
                gap: 2rem;
            }
            
            .hero-features {
                flex-direction: column;
                align-items: center;
            }
            
            .nav-links {
                gap: 1rem;
            }
            
            .auth-buttons {
                flex-direction: column;
            }
            
            .modal-content {
                padding: 2rem;
            }
        }

        /* Loading Animation */
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #333;
            border-radius: 50%;
            border-top-color: #00ff00;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Scanlines effect */
        body::after {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: repeating-linear-gradient(
                0deg,
                rgba(0, 255, 0, 0.05),
                rgba(0, 255, 0, 0.05) 2px,
                transparent 2px,
                transparent 4px
            );
            pointer-events: none;
            z-index: 1000;
        }

        /* Terminal cursor */
        .cursor::after {
            content: '_';
            animation: blink 1s infinite;
        }

        @keyframes blink {
            0%, 50% { opacity: 1; }
            51%, 100% { opacity: 0; }
        }
    </style>
</head>
<body>
    <div class="matrix-bg" id="matrixBg"></div>

    <header>
        <nav class="container">
            <div class="logo glitch" data-text="💀 DARK STORE">💀 TumnataMreja # Market</div>
            <div class="nav-links">
                <a href="/">НАЧАЛО</a>
                <% if (user) { %>
                    <a href="/dashboard">СИСТЕМА</a>
                    <a href="/logout">ИЗХОД</a>
                    <span style="color: #00ff00; border: 1px solid #00ff00; padding: 0.3rem 0.8rem;">
                        USER: <%= user.username.toUpperCase() %>
                    </span>
                <% } else { %>
                    <a href="/login">ДОСТЪП</a>
                    <a href="/register" class="btn">РЕГИСТРАЦИЯ</a>
                <% } %>
            </div>
        </nav>
    </header>

    <main>
        <section class="hero">
            <div class="container">
                <h1 class="glitch cursor" data-text="UNDERGROUND MARKET">UNDERGROUND MARKET</h1>
                <p>АНОНИМНИ КРИПТОВАЛУТНИ ПЛАЩАНИЯ // СИГУРНА ДОСТАВКА // БЕЗ СЛЕДИ</p>
                
                <div class="hero-features">
                    <div class="feature-badge">🔒 АНОНИМНОСТ</div>
                    <div class="feature-badge">⚡ НЕЗАБАВНО</div>
                    <div class="feature-badge">💀 UNTRACEABLE</div>
                    <div class="feature-badge">🌐 24/7 ONLINE</div>
                </div>
            </div>
        </section>

        <section class="products-section">
            <div class="container">
                <h2 class="section-title glitch" data-text="AVAILABLE PRODUCTS">AVAILABLE PRODUCTS</h2>
                
                <% if (!user) { %>
                    <div class="auth-prompt">
                        <h3>⚠️ ACCESS DENIED</h3>
                        <p>НЕОБХОДИМА Е РЕГИСТРАЦИЯ ЗА ДОСТЪП ДО UNDERGROUND MARKET</p>
                        <div class="auth-buttons">
                            <a href="/login" class="btn-auth">LOGIN</a>
                            <a href="/register" class="btn-auth">REGISTER</a>
                        </div>
                    </div>
                <% } %>

                <div class="products-grid">
                    <% products.forEach(product => { %>
                        <div class="product-card">
                            <div class="product-image">
                                💀
                            </div>
                            
                            <h3 class="product-name"><%= product.name %></h3>
                            <p class="product-description"><%= product.description %></p>
                            
                            <div class="product-price">$<%= product.price.toFixed(2) %></div>
                            
                            <div class="product-actions">
                                <% if (user) { %>
                                    <button class="btn-buy" onclick="openPurchaseModal(<%= product.id %>, '<%= product.name.replace(/'/g, "\\'") %>', <%= product.price %>)">
                                        🛒 BUY NOW
                                    </button>
                                <% } else { %>
                                    <button class="btn-buy" onclick="alert('ACCESS DENIED - LOGIN REQUIRED!')">
                                        🔒 ACCESS DENIED
                                    </button>
                                <% } %>
                            </div>
                        </div>
                    <% }) %>
                </div>
            </div>
        </section>
    </main>

    <!-- Purchase Modal -->
    <div id="purchaseModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">💳 COMPLETE PURCHASE</h3>
                <button class="close-modal" onclick="closePurchaseModal()">&times;</button>
            </div>
            
            <div class="payment-form">
                <div class="form-group">
                    <label>📦 PRODUCT:</label>
                    <input type="text" id="modalProductName" readonly>
                </div>
                
                <div class="form-group">
                    <label>📊 QUANTITY:</label>
                    <input type="number" id="modalQuantity" min="1" max="10" value="1">
                </div>
                
                <div class="form-group">
                    <label>🪙 CRYPTOCURRENCY:</label>
                    <select id="modalCurrency">
                        <option value="BTC">BITCOIN (BTC)</option>
                        <option value="ETH">ETHEREUM (ETH)</option>
                        <option value="USDT">TETHER (USDT)</option>
                        <option value="USDC">USD COIN (USDC)</option>
                        <option value="LTC">LITECOIN (LTC)</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label>🏦 PAYMENT PROVIDER:</label>
                    <div class="provider-selection">
                        <button type="button" class="provider-btn selected" data-provider="oxapay">
                            OXAPAY
                        </button>
                        <button type="button" class="provider-btn" data-provider="wolvpay">
                            WOLVPAY
                        </button>
                    </div>
                </div>
                
                <div class="form-group">
                    <label>💰 TOTAL AMOUNT:</label>
                    <input type="text" id="modalTotal" readonly>
                </div>
                
                <button type="button" class="btn" onclick="processPurchase()" id="purchaseBtn">
                    🚀 INITIALIZE PAYMENT
                </button>
                
                <div id="paymentResult" class="payment-result" style="display: none;"></div>
            </div>
        </div>
    </div>

    <footer>
        <div class="container">
            <p>&copy; 2025 TUMNATAMREJA | SECURE PAYMENTS via OXAPAY & WOLVPAY | ANONYMOUS • SECURE • UNTRACEABLE</p>
        </div>
    </footer>

    <script>
        // Matrix rain effect
        function createMatrix() {
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');
            const matrixBg = document.getElementById('matrixBg');
            
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
            matrixBg.appendChild(canvas);
            
            const chars = '01';
            const charArray = chars.split('');
            const fontSize = 10;
            const columns = canvas.width / fontSize;
            const drops = [];
            
            for (let x = 0; x < columns; x++) {
                drops[x] = 1;
            }
            
            function draw() {
                ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
                ctx.fillRect(0, 0, canvas.width, canvas.height);
                
                ctx.fillStyle = '#00ff00';
                ctx.font = fontSize + 'px monospace';
                
                for (let i = 0; i < drops.length; i++) {
                    const text = charArray[Math.floor(Math.random() * charArray.length)];
                    ctx.fillText(text, i * fontSize, drops[i] * fontSize);
                    
                    if (drops[i] * fontSize > canvas.height && Math.random() > 0.975) {
                        drops[i] = 0;
                    }
                    drops[i]++;
                }
            }
            
            setInterval(draw, 50);
        }
        
        // Initialize matrix on load
        window.addEventListener('load', createMatrix);
        
        let currentProductId = null;
        let currentProductPrice = 0;
        let selectedProvider = 'oxapay';

        function openPurchaseModal(productId, productName, price) {
            currentProductId = productId;
            currentProductPrice = price;
            
            document.getElementById('modalProductName').value = productName;
            document.getElementById('modalQuantity').value = 1;
            document.getElementById('modalTotal').value = '<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>💀 TumnataMreja - Underground Market</title>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' + price.toFixed(2);
            
            document.getElementById('purchaseModal').style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        function closePurchaseModal() {
            document.getElementById('purchaseModal').style.display = 'none';
            document.body.style.overflow = 'auto';
            document.getElementById('paymentResult').style.display = 'none';
        }

        // Update total when quantity changes
        document.addEventListener('DOMContentLoaded', function() {
            const quantityInput = document.getElementById('modalQuantity');
            if (quantityInput) {
                quantityInput.addEventListener('input', function() {
                    const quantity = parseInt(this.value) || 1;
                    const total = currentProductPrice * quantity;
                    document.getElementById('modalTotal').value = '<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>💀 TumnataMreja - Underground Market</title>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' + total.toFixed(2);
                });
            }

            // Provider selection
            const providerBtns = document.querySelectorAll('.provider-btn');
            providerBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    providerBtns.forEach(b => b.classList.remove('selected'));
                    this.classList.add('selected');
                    selectedProvider = this.dataset.provider;
                });
            });
        });

        async function processPurchase() {
            if (!currentProductId) return;

            const quantity = parseInt(document.getElementById('modalQuantity').value) || 1;
            const currency = document.getElementById('modalCurrency').value;
            const purchaseBtn = document.getElementById('purchaseBtn');
            const resultDiv = document.getElementById('paymentResult');

            // Disable button and show loading
            purchaseBtn.disabled = true;
            purchaseBtn.innerHTML = '<span class="loading"></span> INITIALIZING...';
            
            try {
                const response = await fetch(`/buy/${currentProductId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        quantity: quantity,
                        provider: selectedProvider,
                        currency: currency
                    })
                });

                const result = await response.json();

                if (result.success) {
                    resultDiv.className = 'payment-result payment-success';
                    resultDiv.innerHTML = `
                        <h4>✅ PAYMENT INITIALIZED</h4>
                        <p><strong>PAYMENT ID:</strong> ${result.paymentId}</p>
                        <p><strong>AMOUNT:</strong> ${result.cryptoAmount} ${result.cryptoCurrency}</p>
                        <p><strong>ADDRESS:</strong></p>
                        <div style="font-family: monospace; word-break: break-all; color: #00ff00; border: 1px solid #00ff00; padding: 0.5rem; margin: 1rem 0;">
                            ${result.address}
                        </div>
                        <div style="margin: 1rem 0;">
                            <a href="${result.paymentUrl}" target="_blank" class="btn" style="margin-right: 1rem;">
                                🌐 OPEN PAYMENT
                            </a>
                            <button onclick="copyToClipboard('${result.address}')" class="btn">
                                📋 COPY ADDRESS
                            </button>
                        </div>
                        <small style="color: #00cc00;">PAYMENT EXPIRES IN 30 MINUTES</small>
                    `;
                    resultDiv.style.display = 'block';
                    
                    // Auto close modal after 5 seconds and redirect to dashboard
                    setTimeout(() => {
                        closePurchaseModal();
                        window.location.href = '/dashboard';
                    }, 5000);
                    
                } else {
                    throw new Error(result.error || 'PAYMENT INITIALIZATION FAILED');
                }

            } catch (error) {
                console.error('Purchase error:', error);
                resultDiv.className = 'payment-result payment-error';
                resultDiv.innerHTML = `
                    <h4>❌ PAYMENT FAILED</h4>
                    <p>${error.message}</p>
                    <button onclick="location.reload()" class="btn" style="margin-top: 1rem;">
                        🔄 RETRY
                    </button>
                `;
                resultDiv.style.display = 'block';
            } finally {
                // Re-enable button
                purchaseBtn.disabled = false;
                purchaseBtn.innerHTML = '🚀 INITIALIZE PAYMENT';
            }
        }

        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(() => {
                alert('📋 ADDRESS COPIED TO CLIPBOARD!');
            }).catch(() => {
                prompt('COPY THIS ADDRESS:', text);
            });
        }

        // Close modal when clicking outside
        document.getElementById('purchaseModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closePurchaseModal();
            }
        });

        // Escape key to close modal
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closePurchaseModal();
            }
        });

        // Terminal-style typing effect for titles
        function typeWriter(element, text, speed = 100) {
            let i = 0;
            element.innerHTML = '';
            function type() {
                if (i < text.length) {
                    element.innerHTML += text.charAt(i);
                    i++;
                    setTimeout(type, speed);
                }
            }
            type();
        }

        // Random glitch effect
        setInterval(() => {
            const glitchElements = document.querySelectorAll('.glitch');
            glitchElements.forEach(el => {
                if (Math.random() > 0.9) {
                    el.style.animation = 'none';
                    setTimeout(() => {
                        el.style.animation = 'glitch 0.3s linear';
                    }, 10);
                }
            });
        }, 2000);
    </script>
</body>
</html><!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>💀 TumnataMreja - Underground Market</title>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'